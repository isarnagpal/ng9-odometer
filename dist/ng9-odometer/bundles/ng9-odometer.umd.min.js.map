{"version":3,"sources":["ng://ng9-odometer/lib/odometer.config.ts","ng://ng9-odometer/lib/ng9-odometer.component.ts","ng://ng9-odometer/lib/ng9-odometer.module.ts"],"names":["Ng9OdometerConfig","this","animation","format","theme","value","duration","auto","_c0","Odometer","require","Ng9OdometerComponent","config","observable","undefined","themes","prototype","initOdometer","_.isUndefined","container","odometer","el","nativeElement","number","update","initConfig","_.defaults","_.includes","ngOnInit","_this","subscription","subscribe","trigger","ngOnDestroy","unsubscribe","ngOnChanges","ngAfterViewInit","selectors","viewQuery","rf","ctx","ElementRef","i0.ɵɵelement","Ng9OdometerModule","forRoot","ngModule","imports","CommonModule","declarations","exports"],"mappings":"kXAYA,IAAAA,EAAA,WACIC,KAAAC,UAAc,QACdD,KAAAE,OAAS,SACTF,KAAAG,MAAU,UACVH,KAAAI,MAAU,EACVJ,KAAAK,SAAa,IACbL,KAAAM,MAAS,GClBbC,EAAA,CAAA,aAgBMC,EAAWC,QAAQ,yBAEzB,SAAAC,IAoBaV,KAAAW,OAAiC,GACjCX,KAAAY,gBAAkCC,EAGlCb,KAAAC,eAAoBY,EACpBb,KAAAE,YAAiBW,EACjBb,KAAAG,WAAgBU,EAChBb,KAAAI,WAAgBS,EAChBb,KAAAK,cAAmBQ,EACnBb,KAAAM,UAAgBO,EAGjBb,KAAAc,OAAwB,CAC5B,MACA,UACA,UACA,UACA,QACA,eACA,wBAIIJ,EAAAK,UAAAC,aAAR,WACSC,EAAAA,YAAcjB,KAAKkB,iBACG,IAAbV,IAEVR,KAAKmB,SAAW,IAAIX,EAAS,CACzBY,GAAIpB,KAAKkB,UAAUG,cACnBpB,UAAWD,KAAKW,OAAOV,UACvBG,MAAOJ,KAAKW,OAAOP,MACnBC,SAAUL,KAAKW,OAAON,SACtBH,OAAQF,KAAKW,OAAOT,OACpBC,MAAOH,KAAKW,OAAOR,SAGlBc,EAAAA,YAAcjB,KAAKsB,SAAWtB,KAAKW,OAAOL,MAC3CN,KAAKmB,SAASI,OAAOvB,KAAKsB,UAK9BZ,EAAAK,UAAAS,WAAR,WACIxB,KAAKW,OAASc,EAAAA,SAAWzB,KAAKW,OAAQ,IAAIZ,GAGrCkB,EAAAA,YAAcjB,KAAKC,aACpBD,KAAKW,OAAOV,UAAYD,KAAKC,WAI5BgB,EAAAA,YAAcjB,KAAKE,UACpBF,KAAKW,OAAOT,OAASF,KAAKE,QAIzBe,EAAAA,YAAcjB,KAAKG,SACpBH,KAAKW,OAAOR,MAASuB,EAAAA,SAAW1B,KAAKc,OAAQd,KAAKG,OAAqBH,KAAKG,MAAjB,WAI1Dc,EAAAA,YAAcjB,KAAKI,SACpBJ,KAAKW,OAAOP,MAAQJ,KAAKI,OAIxBa,EAAAA,YAAcjB,KAAKK,YACpBL,KAAKW,OAAON,SAAWL,KAAKK,UAI3BY,EAAAA,YAAcjB,KAAKM,QACpBN,KAAKW,OAAOL,KAAON,KAAKM,MAKvBoB,EAAAA,SAAW1B,KAAKc,OAAQd,KAAKW,OAAOR,SACrCH,KAAKW,OAAOR,MAAQ,YAQrBO,EAAAK,UAAAY,SAAP,WAAA,IAAAC,EAAA5B,KAGSiB,EAAAA,YAAcjB,KAAKY,aAAgBZ,KAAKW,OAAOL,OAChDN,KAAK6B,aAAe7B,KAAKY,WAAWkB,WAAU,SAACC,IACtCd,EAAAA,YAAcc,IAAYA,GAC3BH,EAAKT,SAASI,OAAOK,EAAKN,YAOtCtB,KAAKwB,cAGFd,EAAAK,UAAAiB,YAAP,WACSf,EAAAA,YAAcjB,KAAK6B,eACpB7B,KAAK6B,aAAaI,eAInBvB,EAAAK,UAAAmB,YAAP,WACSjB,EAAAA,YAAcjB,KAAKsB,SAAYL,EAAAA,YAAcjB,KAAKmB,YAAanB,KAAKW,OAAOL,MAC5EN,KAAKmB,SAASI,OAAOvB,KAAKsB,SAI3BZ,EAAAK,UAAAoB,gBAAP,WACInC,KAAKgB,iDAxHAN,wCAAAA,EAAoB0B,UAAA,CAAA,CAAA,iBAAAC,UAAA,SAAAC,EAAAC,UAAA,EAAAD,yBAGGE,EAAAA,qWALrBC,EAAAA,aAAAA,EAAAA,MAAAA,KAAAA,mjzBCvBf,SAAAC,YAMWA,EAAAC,QAAP,WACI,MAAO,CACHC,SAAUF,uCAHTA,oEAAAA,IAAiBG,QAAA,CAJjB,CAACC,EAAAA,0FAIDJ,EAAiB,CAAAK,aAAA,CAHXrC,GAAoBmC,QAAA,CADzBC,EAAAA,cAAYE,QAAA,CAEZtC","sourcesContent":["/**\r\n * Created by Jose Andres on 6.15.17\r\n */\r\nexport interface Ng9OdometerConfigModel {\r\n    animation?: string;\r\n    format?: string;\r\n    theme?: string;\r\n    value?: number;\r\n    duration?: number;\r\n    auto?: boolean;\r\n}\r\n\r\nexport class Ng9OdometerConfig implements Ng9OdometerConfigModel {\r\n    animation ? = 'slide';\r\n    format = '(,ddd)';\r\n    theme ? = 'default';\r\n    value ? = 0;\r\n    duration ? = 2000;\r\n    auto ? = true;\r\n}\r\n","// tslint:disable-next-line: no-reference\r\n///<reference path=\"odometer.d.ts\" />\r\n\r\n/**\r\n * Created by Jose Andres on 6.15.17\r\n */\r\n\r\nimport * as _ from 'lodash';\r\nimport { Component, ViewEncapsulation, Input, OnInit, OnDestroy, OnChanges, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { OdometerModel } from './odometer.model';\r\nimport { Ng9OdometerConfig, Ng9OdometerConfigModel } from './odometer.config';\r\n\r\n// HubSpot's Oodometer\r\n// https://github.com/HubSpot/odometer\r\nconst Odometer = require('odometer');\r\n\r\n@Component({\r\n    selector: 'ng9-odometer',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: [\r\n        'themes/CAR_THEME.css',\r\n        'themes/DEFAULT_THEME.css',\r\n        'themes/DIGITAL_THEME.css',\r\n        'themes/MINIMAL_THEME.css',\r\n        'themes/PLAZA_THEME.css',\r\n        'themes/SLOT_MACHINE_THEME.css',\r\n        'themes/TRAIN_STATION_THEME.css',\r\n        'ng9-odometer.component.css'\r\n    ],\r\n    template: `<div #container></div>`\r\n})\r\nexport class Ng9OdometerComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    private subscription: Subscription;\r\n    private odometer: OdometerModel;\r\n    @ViewChild('container', { read: ElementRef }) container: ElementRef;\r\n    @Input() number: number; // Required\r\n    @Input() config: Ng9OdometerConfigModel = {};\r\n    @Input() observable: Observable<boolean> = undefined;\r\n\r\n    // Individual configuration attributes\r\n    @Input() animation: string = undefined;\r\n    @Input() format: string = undefined;\r\n    @Input() theme: string = undefined;\r\n    @Input() value: number = undefined;\r\n    @Input() duration: number = undefined;\r\n    @Input() auto: boolean = undefined;\r\n\r\n    // Available themes\r\n    private themes: Array<string> = [\r\n        'car',\r\n        'default',\r\n        'digital',\r\n        'minimal',\r\n        'plaza',\r\n        'slot-machine',\r\n        'train-station'\r\n    ];\r\n\r\n    // Start Odometer\r\n    private initOdometer() {\r\n        if (!_.isUndefined(this.container)\r\n            && typeof Odometer !== 'undefined') {\r\n\r\n            this.odometer = new Odometer({\r\n                el: this.container.nativeElement,\r\n                animation: this.config.animation,\r\n                value: this.config.value,\r\n                duration: this.config.duration,\r\n                format: this.config.format,\r\n                theme: this.config.theme,\r\n            });\r\n\r\n            if (!_.isUndefined(this.number) && this.config.auto) {\r\n                this.odometer.update(this.number);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initConfig() {\r\n        this.config = _.defaults(this.config, new Ng9OdometerConfig());\r\n\r\n        // Animation\r\n        if (!_.isUndefined(this.animation)) {\r\n            this.config.animation = this.animation;\r\n        }\r\n\r\n        // Format\r\n        if (!_.isUndefined(this.format)) {\r\n            this.config.format = this.format;\r\n        }\r\n\r\n        // Theme\r\n        if (!_.isUndefined(this.theme)) {\r\n            this.config.theme = !_.includes(this.themes, this.theme) ? 'default' : this.theme;\r\n        }\r\n\r\n        // Value\r\n        if (!_.isUndefined(this.value)) {\r\n            this.config.value = this.value;\r\n        }\r\n\r\n        // Duration\r\n        if (!_.isUndefined(this.duration)) {\r\n            this.config.duration = this.duration;\r\n        }\r\n\r\n        // Auto\r\n        if (!_.isUndefined(this.auto)) {\r\n            this.config.auto = this.auto;\r\n        }\r\n\r\n        // Validate theme. If not part of the\r\n        // available themes array, use the default\r\n        if (!_.includes(this.themes, this.config.theme)) {\r\n            this.config.theme = 'default';\r\n        }\r\n    }\r\n\r\n    // ***************************************\r\n    //  LIFECYCLES\r\n    // ***************************************\r\n\r\n    public ngOnInit() {\r\n\r\n        // Bind Observable\r\n        if (!_.isUndefined(this.observable) && !this.config.auto) {\r\n            this.subscription = this.observable.subscribe((trigger: boolean) => {\r\n                if (!_.isUndefined(trigger) && trigger) {\r\n                    this.odometer.update(this.number);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Apply defaults and\r\n        // individual configurations\r\n        this.initConfig();\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        if (!_.isUndefined(this.subscription)) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public ngOnChanges() {\r\n        if (!_.isUndefined(this.number) && !_.isUndefined(this.odometer) && this.config.auto) {\r\n            this.odometer.update(this.number);\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        this.initOdometer();\r\n    }\r\n}\r\n","/**\r\n * Created by Jose Andres on 02.23.17\r\n */\r\n\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng9OdometerComponent } from './ng9-odometer.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [Ng9OdometerComponent],\r\n    exports: [Ng9OdometerComponent]\r\n})\r\nexport class Ng9OdometerModule {\r\n    static forRoot(): ModuleWithProviders<Ng9OdometerModule> {\r\n        return {\r\n            ngModule: Ng9OdometerModule\r\n        };\r\n    }\r\n}\r\n"]}